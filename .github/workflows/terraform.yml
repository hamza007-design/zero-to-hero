name: "Terraform CI/CD Pipeline"

on:
  push:
    branches: [dev]
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action (apply/destroy)'
        required: true
        type: choice
        options: [apply, destroy]

env:
  TF_DIR: ./Terraform  # Define Terraform directory path

jobs:
  terraform_validate:
    name: "Validate & Plan"
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ID }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Plan
        run: terraform plan -var-file="default.tfvars"
        working-directory: ${{ env.TF_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ID }}

  terraform_apply:
    name: "Apply Changes"
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply' }}
    runs-on: ubuntu-latest
    environment: production
    needs: terraform_validate

    steps:
      - uses: actions/checkout@v4
      
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - run: terraform init
        working-directory: ${{ env.TF_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ID }}

      - run: terraform apply -auto-approve -var-file="default.tfvars"
        working-directory: ${{ env.TF_DIR }}

  terraform_destroy:
    name: "Destroy Infrastructure"
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy' }}
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4
      
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7 

      - run: terraform init
        working-directory: ${{ env.TF_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ID }}

      - run: terraform destroy -auto-approve -var-file="default.tfvars"
        working-directory: ${{ env.TF_DIR }}